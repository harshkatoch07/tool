// <auto-generated />
using System;
using FundApproval.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FundApproval.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250730101316_InitWorkflowStepUsers")]
    partial class InitWorkflowStepUsers
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Department", b =>
                {
                    b.Property<short>("DepartmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("DepartmentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("DepartmentID"));

                    b.Property<int?>("DepartmentHead")
                        .HasColumnType("int")
                        .HasColumnName("DepartmentHead");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<string>("ShortName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ShortName");

                    b.HasKey("DepartmentID");

                    b.ToTable("Product_MST_Department", (string)null);
                });

            modelBuilder.Entity("FundApproval.Api.Models.Approval", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("ActionedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("ApproverId")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FundRequestId")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApproverId");

                    b.HasIndex("FundRequestId");

                    b.ToTable("Approvals");
                });

            modelBuilder.Entity("FundApproval.Api.Models.Attachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FundRequestId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UploadedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UploadedBy")
                        .HasColumnType("int");

                    b.Property<int>("UploaderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FundRequestId");

                    b.HasIndex("UploaderId");

                    b.ToTable("Attachments");
                });

            modelBuilder.Entity("FundApproval.Api.Models.AuditLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FundRequestId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AuditLogs");
                });

            modelBuilder.Entity("FundApproval.Api.Models.Designation", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("DesignationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("Id"));

                    b.Property<int>("AtLevel")
                        .HasColumnType("int")
                        .HasColumnName("AtLevel");

                    b.Property<short>("DepartmentId")
                        .HasColumnType("smallint")
                        .HasColumnName("DepartmentID");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DesignationName");

                    b.Property<int>("NoticePeriod")
                        .HasColumnType("int")
                        .HasColumnName("NoticePeriod");

                    b.Property<string>("SalaryGrade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SalaryGrade");

                    b.HasKey("Id");

                    b.ToTable("Product_MST_Designation", (string)null);
                });

            modelBuilder.Entity("FundApproval.Api.Models.FormSchema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Project")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchemaJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FormSchemas");
                });

            modelBuilder.Entity("FundApproval.Api.Models.FundRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CurrentLevel")
                        .HasColumnType("int");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Project")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RequestorId")
                        .HasColumnType("int")
                        .HasColumnName("InitiatorId");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RequestorId");

                    b.ToTable("FundRequests");
                });

            modelBuilder.Entity("FundApproval.Api.Models.FundRequestField", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FieldName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FieldValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FundRequestId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FundRequestId");

                    b.ToTable("FundRequestFields");
                });

            modelBuilder.Entity("FundApproval.Api.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProjectID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ProjectName");

                    b.HasKey("Id");

                    b.ToTable("Product_MST_CAPEA", (string)null);
                });

            modelBuilder.Entity("FundApproval.Api.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EmployeeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<short?>("DepartmentId")
                        .HasColumnType("smallint")
                        .HasColumnName("DepartmentID");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EmailID");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FirstName");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Gender");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("LastName");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MobileNumber");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Password");

                    b.Property<short?>("ProjectId")
                        .HasColumnType("smallint")
                        .HasColumnName("ProjectID");

                    b.Property<int>("Role")
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("LoginName");

                    b.HasKey("Id");

                    b.ToTable("Product_MST_UserSource", (string)null);
                });

            modelBuilder.Entity("FundApproval.Api.Models.Workflow", b =>
                {
                    b.Property<int>("WorkflowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("WorkflowId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkflowId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedAt");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("DepartmentId");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("ModifiedAt");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ModifiedBy");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<string>("Template")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Template");

                    b.Property<string>("TextBoxName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TextBoxName");

                    b.HasKey("WorkflowId");

                    b.ToTable("Workflows", (string)null);
                });

            modelBuilder.Entity("FundApproval.Api.Models.WorkflowStep", b =>
                {
                    b.Property<int>("StepId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StepId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StepId"));

                    b.Property<bool>("AutoApprove")
                        .HasColumnType("bit")
                        .HasColumnName("AutoApprove");

                    b.Property<bool>("IsFinalReceiver")
                        .HasColumnType("bit")
                        .HasColumnName("IsFinalReceiver");

                    b.Property<int>("SLAHours")
                        .HasColumnType("int")
                        .HasColumnName("SLAHours");

                    b.Property<int>("Sequence")
                        .HasColumnType("int")
                        .HasColumnName("Sequence");

                    b.Property<string>("StepName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("StepName");

                    b.Property<int>("WorkflowId")
                        .HasColumnType("int")
                        .HasColumnName("WorkflowId");

                    b.HasKey("StepId");

                    b.HasIndex("WorkflowId");

                    b.ToTable("WorkflowSteps", (string)null);
                });

            modelBuilder.Entity("FundApproval.Api.Models.WorkflowStepUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("StepId")
                        .HasColumnType("int")
                        .HasColumnName("StepId");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.HasIndex("StepId");

                    b.ToTable("WorkflowStepUsers", (string)null);
                });

            modelBuilder.Entity("FundApproval.Api.Models.Approval", b =>
                {
                    b.HasOne("FundApproval.Api.Models.User", "Approver")
                        .WithMany()
                        .HasForeignKey("ApproverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FundApproval.Api.Models.FundRequest", "FundRequest")
                        .WithMany("Approvals")
                        .HasForeignKey("FundRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Approver");

                    b.Navigation("FundRequest");
                });

            modelBuilder.Entity("FundApproval.Api.Models.Attachment", b =>
                {
                    b.HasOne("FundApproval.Api.Models.FundRequest", "FundRequest")
                        .WithMany("Attachments")
                        .HasForeignKey("FundRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FundApproval.Api.Models.User", "Uploader")
                        .WithMany()
                        .HasForeignKey("UploaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FundRequest");

                    b.Navigation("Uploader");
                });

            modelBuilder.Entity("FundApproval.Api.Models.FundRequest", b =>
                {
                    b.HasOne("FundApproval.Api.Models.User", "Requestor")
                        .WithMany()
                        .HasForeignKey("RequestorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Requestor");
                });

            modelBuilder.Entity("FundApproval.Api.Models.FundRequestField", b =>
                {
                    b.HasOne("FundApproval.Api.Models.FundRequest", "FundRequest")
                        .WithMany("Fields")
                        .HasForeignKey("FundRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FundRequest");
                });

            modelBuilder.Entity("FundApproval.Api.Models.WorkflowStep", b =>
                {
                    b.HasOne("FundApproval.Api.Models.Workflow", "Workflow")
                        .WithMany("Steps")
                        .HasForeignKey("WorkflowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Workflow");
                });

            modelBuilder.Entity("FundApproval.Api.Models.WorkflowStepUser", b =>
                {
                    b.HasOne("FundApproval.Api.Models.WorkflowStep", "Step")
                        .WithMany("Approvers")
                        .HasForeignKey("StepId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Step");
                });

            modelBuilder.Entity("FundApproval.Api.Models.FundRequest", b =>
                {
                    b.Navigation("Approvals");

                    b.Navigation("Attachments");

                    b.Navigation("Fields");
                });

            modelBuilder.Entity("FundApproval.Api.Models.Workflow", b =>
                {
                    b.Navigation("Steps");
                });

            modelBuilder.Entity("FundApproval.Api.Models.WorkflowStep", b =>
                {
                    b.Navigation("Approvers");
                });
#pragma warning restore 612, 618
        }
    }
}
